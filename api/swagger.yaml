basePath: /api/v1
definitions:
  biz.CreateUserCommand:
    properties:
      nickname:
        example: Gaga
        type: string
      password:
        example: your password
        type: string
      realname:
        example: 张三
        type: string
      username:
        example: pduser
        type: string
    required:
    - password
    - username
    type: object
  biz.UpdateUserCommand:
    properties:
      avatar:
        example: https://xxxx.com/xb.jpg
        type: string
      locked:
        example: false
        type: boolean
      nickname:
        example: Gaga
        type: string
      realname:
        example: 张三
        type: string
    type: object
  biz.User:
    properties:
      avatar:
        type: string
      create_time:
        type: string
      id:
        type: integer
      last_login_time:
        type: string
      locked:
        type: boolean
      nickname:
        type: string
      password:
        type: string
      realname:
        type: string
      update_time:
        type: string
      username:
        type: string
    type: object
  errors.Error:
    properties:
      code:
        allOf:
        - $ref: '#/definitions/errors.ErrorCode'
        example: 0
      msg:
        example: success
        type: string
    type: object
  errors.ErrorCode:
    enum:
    - 0
    - 99999
    - 100000
    - 100010
    - 100011
    - 200000
    - 200001
    - 300000
    type: integer
    x-enum-comments:
      ErrCodeInvalidParam: 参数错误
    x-enum-varnames:
    - ErrCodeOK
    - ErrCodeUnknownError
    - ErrCodeSystemError
    - ErrCodeDBError
    - ErrCodeDBConnectionError
    - ErrCodeUserError
    - ErrCodeInvalidParam
    - ErrCodeExternalError
  types.Page-biz_User:
    properties:
      limit:
        type: integer
      list:
        items:
          $ref: '#/definitions/biz.User'
        type: array
      offset:
        type: integer
      total:
        description: Total 总数
        type: integer
    type: object
  types.ResponseEntity-types_Page-biz_User:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/types.Page-biz_User'
      msg:
        type: string
    type: object
host: localhost:2345
info:
  contact:
    email: dev_support@gail.com
    name: 服务支持
    url: https://pangud.org
  description: PANGUD OS API.
  license:
    name: AGPL-3.0
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
  termsOfService: https://pangud.org
  title: PangudOS API
  version: "1.0"
paths:
  /ssl_certs/dns_providers:
    get:
      consumes:
      - application/json
      description: 查询DNS提供商列表
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 查询DNS提供商列表
      tags:
      - SSL证书
  /users:
    get:
      consumes:
      - application/json
      description: 分页查询用户
      parameters:
      - in: query
        name: keywords
        type: string
      - default: 10
        example: 10
        in: query
        name: limit
        type: integer
      - default: 0
        example: 0
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ResponseEntity-types_Page-biz_User'
      security:
      - ApiKeyAuth: []
      summary: 分页查询用户
      tags:
      - User
    post:
      consumes:
      - application/json
      description: 根据用户名、密码、昵称、姓名创建新用户, 其中用户名、密码为必填、其他为可选项
      parameters:
      - description: 用户信息
        in: body
        name: CreateUserCommand
        required: true
        schema:
          $ref: '#/definitions/biz.CreateUserCommand'
      produces:
      - application/json
      responses:
        "201":
          description: success
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - ApiKeyAuth: []
      summary: 新增用户
      tags:
      - User
  /users/{id}:
    patch:
      consumes:
      - application/json
      description: 更新用户信息 姓名、昵称、头像
      parameters:
      - description: use id
        in: path
        name: id
        required: true
        type: integer
      - description: 用户信息
        in: body
        name: UpdateUserCommand
        required: true
        schema:
          $ref: '#/definitions/biz.UpdateUserCommand'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - ApiKeyAuth: []
      summary: 更新用户
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
